import java.util.Iterator;import java.util.NoSuchElementException;/**   A class that implements a dictionary by using a sorted linked chain.   @author Frank M. Carrano*/public class SortedLinkedDictionary<K extends Comparable<? super K>, V>             implements DictionaryInterface<K, V>{   private Node firstNode;       // reference to first node of chain   private int  numberOfEntries;    public SortedLinkedDictionary()   {    firstNode = null;    numberOfEntries = 0;   } // end default constructor   public V add(K key, V value)   {      V result = null;      // search chain until you either find a node containing key      // or pass the point where it should be      Node currentNode = firstNode;      Node nodeBefore = null;      while ( (currentNode != null) &&             key.compareTo(currentNode.getKey()) > 0 )      {         nodeBefore = currentNode;         currentNode = currentNode.getNextNode();      } // end while      if ( (currentNode != null) && key.equals(currentNode.getKey()) )      {         result = currentNode.getValue();         currentNode.setValue(value);         // replace value      }      else      {         Node newNode = new Node(key, value); // create new node         numberOfEntries++;                   // increase length for both cases         if (nodeBefore == null)          { // add at beginning (includes empty chain)            newNode.setNextNode(firstNode);            firstNode = newNode;         }         else // add elsewhere in non-empty chain         {            newNode.setNextNode(currentNode);  // currentNode is after new node            nodeBefore.setNextNode(newNode);   // nodeBefore is before new node         } // end if	      } // end if      return result;   } // end add   //  < Implementations of the other methods in DictionaryInterface >   //  . . .   //  < Private classes KeyIterator and ValueIterator (See Segment 20.25) >   //  . . .   //  < The private class Node >   //  . . .} // end SortedLinkedDictionary