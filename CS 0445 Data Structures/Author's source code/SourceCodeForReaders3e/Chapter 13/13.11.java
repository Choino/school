// Shifts entries that are beyond the entry to be removed to the // next lower position.//  Precondition: 1 <= givenPosition < numberOfEntries;//                numberOfEntries is listÕs length before removal. */private void removeGap(int givenPosition){   assert (givenPosition >= 1) && (givenPosition < numberOfEntries);   int removedIndex = givenPosition - 1;   int lastIndex = numberOfEntries - 1;   for (int index = removedIndex; index < lastIndex; index++)      list[index] = list[index + 1];} // end removeGap