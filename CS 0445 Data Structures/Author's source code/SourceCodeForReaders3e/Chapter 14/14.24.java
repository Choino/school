public T remove(int givenPosition){   T result = null;                           // return value   if ((givenPosition >= 1) && (givenPosition <= numberOfEntries))   {      assert !isEmpty();      if (givenPosition == 1)                 // case 1: remove first entry      {         result = firstNode.getData();        // save entry to be removed          firstNode = firstNode.getNextNode();         if (numberOfEntries == 1)            lastNode = null;                  // solitary entry was removed      }      else                                    // case 2: not first entry      {         Node nodeBefore = getNodeAt(givenPosition - 1);         Node nodeToRemove = nodeBefore.getNextNode();         Node nodeAfter = nodeToRemove.getNextNode();         nodeBefore.setNextNode(nodeAfter);           result = nodeToRemove.getData();     // save entry to be removed         if (givenPosition == numberOfEntries)            lastNode = nodeBefore;            // last node was removed      } // end if      numberOfEntries--;   } // end if   return result;                             // return removed entry, or                                               // null if operation fails} // end remove