private class KeyIterator implements Iterator<K>{   private int currentIndex; // current position in hash table   private int numberLeft;   // number of entries left in iteration   private KeyIterator()    {      currentIndex = 0;      numberLeft = numberOfEntries;   } // end default constructor   public boolean hasNext()    {      return numberLeft > 0;    } // end hasNext   public K next()   {      K result = null;      if (hasNext())      {         // find index of next entry         while ( (hashTable[currentIndex] == null) ||                   hashTable[currentIndex].isRemoved() )          {            currentIndex++;         } // end while         result = hashTable[currentIndex].getKey();         numberLeft--;         currentIndex++;      }      else         throw new NoSuchElementException();      return result;   } // end next   public void remove()   {      throw new UnsupportedOperationException();   } // end remove} // end KeyIterator