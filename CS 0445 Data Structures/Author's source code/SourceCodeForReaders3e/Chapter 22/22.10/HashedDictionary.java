import java.util.Iterator;import java.util.NoSuchElementException;/**   A class that implements a dictionary by using hashing.   @author Frank M. Carrano*/public class HashedDictionary<K, V>              implements DictionaryInterface<K, V>{   private TableEntry<K, V>[] hashTable; // dictionary entries   private int numberOfEntries;   private int locationsUsed; // number of table locations not null   private static final int DEFAULT_SIZE = 101;       // must be prime   private static final double MAX_LOAD_FACTOR = 0.5; // fraction of                                                      // hash table that can be filled                                                public HashedDictionary()   {      this(DEFAULT_SIZE); // call next constructor   } // end default constructor   public HashedDictionary(int tableSize)   {      int primeSize = getNextPrime(tableSize);      hashTable = new TableEntry[primeSize];      numberOfEntries = 0;      locationsUsed = 0;   } // end constructor   //  < Implementations of methods in DictionaryInterface >   //  . . .   //  < Implementations of private methods >   //  . . .   private class TableEntry<S, T>   {   // < See Segment 22.9 >   } // end TableEntry} // end HashedDictionary