import java.util.Iterator;import java.util.NoSuchElementException;public class LinkedListWithIterator<T> implements                                        ListWithIteratorInterface<T>{   private Node firstNode;   private int  numberOfEntries;;   public LinkedListWithIterator()   {      clear();   } // end default constructor  //  < Implementations of the methods of the ADT list go here; //    you can see them in Chapter 14, beginning at Segment 14.7 >//  . . .   public Iterator<T> getIterator()   {      return new IteratorForLinkedList();   } // end getIterator  //  < Segment 15.20 begins a description of the following inner class. >   private class IteratorForLinkedList implements Iterator<T>   {      private Node nextNode;      private IteratorForLinkedList()      {         nextNode = firstNode;      } // end default constructor    //    < Implementations of the methods in the interface Iterator go here;//      you can see them in Segments 15.21 through 15.23. >//    . . .   } // end IteratorForLinkedList  //  < Implementation of the private class Node (Listing 3-4 of Chpater 3) goes here. >//  . . .} // end LinkedListWithIterator