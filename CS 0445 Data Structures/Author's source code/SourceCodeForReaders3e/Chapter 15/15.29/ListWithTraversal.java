import java.util.Iterator;import java.util.NoSuchElementException;public class ListWithTraversal<T> implements ListInterface<T>,                                             Iterator<T>{   private Node firstNode;   private int  numberOfEntries;   private Node nextNode; // node containing next entry in iteration   public ListWithTraversal()   {      clear();   } // end default constructor   public final void clear()   {      firstNode = null;      numberOfEntries = 0;      nextNode = null;   } // end clear   //  < Implementations of the remaining methods of the ADT list go here;    //    you can see them in Chapter 14, beginning at Segment14.7. >   //  . . .   //  < Implementations of the methods in the interface Iterator go here;   //    you can see them in Segments 15.21 through 15.23. >   //  . . .   public void resetTraversal()   {      nextNode = firstNode;   } // end resetTraversal     //  < Implementation of the private class Node (Listing 3-4 of Chapter 3) goes here. >   //  . . .} // end ListWithTraversal  