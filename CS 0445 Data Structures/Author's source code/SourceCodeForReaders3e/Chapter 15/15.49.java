public void remove(){   if (isRemoveOrSetLegal)   {      isRemoveOrSetLegal = false;      if (lastMove.equals(Move.NEXT))      {         // next() called, but neither add() nor remove() has been          // called since         // nextIndex is 1 more than the index of the entry returned         // by next(), so it is the position number of the entry         // to be removed         ArrayListWithListIterator.this.remove(nextIndex);         nextIndex--;      }      else       {         // previous() called, but neither add() nor remove() has been          // called since         assert lastMove.equals(Move.PREVIOUS);         // nextIndex is the index of the entry returned by previous(),         // so it is 1 less than the position number of the entry          // to be removed         ArrayListWithListIterator.this.remove(nextIndex + 1);      } // end if   }   else      throw new IllegalStateException("Illegal call to remove(); " +                                      "next() or previous() was not called, OR "                                      "add() or remove() called since then.");} // end remove