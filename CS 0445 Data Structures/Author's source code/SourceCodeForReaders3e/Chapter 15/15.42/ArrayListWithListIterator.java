import java.util.ListIterator;import java.util.NoSuchElementException;public class ArrayListWithListIterator<T>              implements ListWithListIteratorInterface<T>{   private T[] list;  // array of list entries   private int numberOfEntries;    private static final int DEFAULT_INITIAL_CAPACITY = 25;   public ArrayListWithListIterator()   {      this(DEFAULT_INITIAL_CAPACITY);   } // end default constructor   public ArrayListWithListIterator(int initialCapacity)   {      numberOfEntries = 0;      // the cast is safe because the new array contains null entries      @SuppressWarnings("unchecked")      T[] tempList = (T[])new Object[initialCapacity];      list = tempList;   } // end constructor   //  < Implementations of the methods of the ADT list go here;   //    you can see them in Chapter 13, beginning at Segment13.5. >   //  . . .   public ListIterator<T> getIterator()   {      return new IteratorForArrayList();   } // end getIterator   private class IteratorForArrayList implements ListIterator<T>   {      //    < The description of this implementation begins with Segment 15.43. >      //    . . .   } // end IteratorForArrayList} // end ArrayListWithListIterator