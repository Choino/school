/**   A class that implements a queue of objects by using   a two-part circular chain of linked nodes   @author Frank M. Carrano*/public class TwoPartCircularLinkedQueue<T> implements QueueInterface<T>{    private Node queueNode; // references first node in queue   private Node freeNode;  // references node after back of queue   public TwoPartCircularLinkedQueue()   {      freeNode = new Node(null, null);      freeNode.setNextNode(freeNode);      queueNode = freeNode;   } // end default constructor   //  < Implementations of the queue operations go here. >   //  . . .   private class Node   {      private T    data; // queue entry      private Node next; // link to next node    //    < Constructors and the methods getData, setData, getNextNode, and setNextNode //      are here. >//    . . .      } // end Node} // end TwoPartCircularLinkedQueue